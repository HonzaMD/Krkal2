#head
game	Krkal
author	pal
version	84B4_12E3_C489_1238
include krkal2_A1CF_6963_8DA6_D822.kc
#endhead

objectname oCellularAutomata;

objptra oCellularAutomata::objs;

voidname AutomataStates;
depend AutomataStates << { oZnZakazVjezdu, oZnSedesat, oZnNeSedesat };

object oCellularAutomata 
{
	edit {OutMap, UserName="en{{Cellular Automata}}cs{{Konecny automat}}", Comment="en{{Cellular Automata.}}cs{{Konecny automat.}}"}
	
	cell2D edit {Editable, UserName = "en{{States}}cs{{States}}", Comment = "en{{}}cs{{}}"} 
	{ 
		int X1 edit {DefaultValue=0}, Y1 edit {DefaultValue=0};
	}
	cell2D edit {Editable, UserName = "en{{States}}cs{{States}}", Comment = "en{{}}cs{{}}"} 
	{ 
		int X2 edit {DefaultValue=0}, Y2 edit {DefaultValue=0};
	}

	cell2D edit {Editable, UserName = "en{{Rules}}cs{{Rules}}", Comment = "en{{}}cs{{}}"} 
	{ 
		int rX1 edit {DefaultValue=0}, rY1 edit {DefaultValue=0};
	}
	cell2D edit {Editable, UserName = "en{{Rules}}cs{{Rules}}", Comment = "en{{}}cs{{}}"} 
	{ 
		int rX2 edit {DefaultValue=0}, rY2 edit {DefaultValue=0};
	}
	
	objptr triger;
	
	uconstructor() { 
		triger = onull;
	}

			
	cconstructor() {
		if (@IsGame()) ::Activate() message;
	}

	lconstructor() {
		if (@IsGame()) ::Activate() message;
	}
	
	void ::Activate() 
	{			
		triger = new oAreaTrigger;
		triger->SetPosSz(::X1:X1*40,::Y1:Y1*40,::X2:X2*40,::Y2:Y2*40);
		triger->SetClzGr(::AddGr: oZnSmerova, ::Redirect:this);
		@PlaceObjToMap(triger);
		@MvConnectObjs(triger,this);
	}
	
	void @TriggerOn(objptr @Object, name @ObjType) 
	{
		if (!triger) return;
		
		int tx,ty,tz;
		@ReadObjCoords(@Object, &tx,&ty,&tz);
		
		int x,y;
		y = ty / 40;
				
		int m = 0;
						
		for(x = X1; x <= X2; x++ )
		{
			int state = GetState(x,y);
			
			if (state == 1)
			{			
				if (m == 0)
					m = 1;
				else
				if (m == 1)
					m = 0;
					
				continue;
			}
			
			if (m == 0)
				continue;
				
			int lstate = GetState(x-1, y);
			int rstate = GetState(x+1, y);
			TransitionStates(lstate, state, rstate, x, y);
				
		}
		
		::MoveToNextRow(::TriggerObj:@Object) timed 330;
	}
	
	direct void TransitionStates(int lstate, int state, int rstate, int x, int y)
	{		
			int rx,ry;
			for (rx = rX1; rx <= rX2; rx+=5)
			{
				for (ry = rY1; ry <= rY2; ry++)
				{
					if (lstate == GetState(rx,ry) && state == GetState(rx+1,ry) && rstate == GetState(rx+2,ry))
					{
						SetState(x,y+1,GetState(rx+3,ry));						
						return;
					}
				}		
			}	
	}
	
	void ::MoveToNextRow(objptr ::TriggerObj)
	{
		int tx,ty,tz;
		@ReadObjCoords(TriggerObj, &tx,&ty,&tz);
		
		if (ty < Y2*40)	
		{
			@RemoveObjFromMap(TriggerObj);
			@WriteObjCoords(TriggerObj, tx, ty + 40);
			@PlaceObjToMapKill(TriggerObj);	
		}
		else
		{
			@MoveObjTo(TriggerObj, tx, Y1*40, 0);
		}
	}
	
	direct int GetState(int x, int y)
	{
		@FindObjsInArea(::objs,onull,oKrabice,x,y,x,y);			
		if (::objs->GetCount() > 0) return 1;
		@FindObjsInArea(::objs,onull,oZnZakazVjezdu,x,y,x,y);			
		if (::objs->GetCount() > 0) return 2;
		@FindObjsInArea(::objs,onull,oZnSedesat,x,y,x,y);			
		if (::objs->GetCount() > 0) return 3;
		@FindObjsInArea(::objs,onull,oZnNeSedesat,x,y,x,y);			
		if (::objs->GetCount() > 0) return 4;
		@FindObjsInArea(::objs,onull,oklic,x,y,x,y);			
		if (::objs->GetCount() > 0) return 5;
		
		return 0;
	}
	
	direct void SetState(int x, int y, int state)
	{
		objptr o;		
		switch(state)
		{
		case 1: o = new oKrabice; break;
		case 2: o = new oZnZakazVjezdu; break;
		case 3: o = new oZnSedesat; break;
		case 4: o = new oZnNeSedesat; break;
		case 5: o = new oklic; break;
		default: return;
		}
		
		@WriteObjCoords(o, x*40,y*40);		
		@PlaceObjToMapKill(o);		
	}
}	
